Imports System
Imports System.Collections.Generic
Imports System.Linq
Imports System.Text
Imports System.IO
Imports System.Net
'
' This is a sample VisualBaisc.NET HTTP REST client generated by HTTP4e2. 
' 
Public Class HTTP4e2
� � 
� � Public Shared Sub Main(ByVal args As String())
� � � � 
� � � � Dim url = "$httpBean.url"
� � � � Dim method = "$httpBean.method"
� � � � Dim body = "$httpBean.body"
� � � � 
� � � � Dim request = DirectCast(WebRequest.Create(url), HttpWebRequest)
#foreach( $hKey in $httpBean.cSharpSpecialHeaders.keySet() )
        request.$hKey = "$httpBean.cSharpSpecialHeaders.get($hKey)"
#end
� � � � ' custom headers
� � � � Dim headers = New Dictionary(Of String, String)()
#foreach( $hKey in $httpBean.headers.keySet() )
        headers.Add("$hKey", "$httpBean.headers.get($hKey)")
#end
� � � � New HTTP4e2().execute(request, method, headers, body)
� � End Sub
� � 
� � Private Class ResponseReader
� � � � Implements IResponseReader
� � � � Public Sub readHeaders(ByVal response As HttpWebResponse)
� � � � � � Console.WriteLine(("HTTP/" & response.ProtocolVersion & " ") + response.StatusCode)
� � � � � � Console.WriteLine(response.Headers)
� � � � End Sub
� � � � Public Sub readContent(ByVal responseContent As String)
� � � � � � Console.WriteLine(responseContent)
� � � � End Sub
� � � � Public Sub onFailure(ByVal cause As WebException)
� � � � � � Console.WriteLine(cause)
� � � � End Sub
� � End Class
� � 
� � Private Sub execute(ByVal request As HttpWebRequest, ByVal method As String, ByVal headers As IDictionary(Of String, String), ByVal body As String)
� � � � 
� � � � request.Method = method
� � � � For Each h As KeyValuePair(Of [String], [String]) In headers
� � � � � � request.Headers.Add(h.Key, h.Value)
� � � � Next
� � � � 
� � � � If body IsNot Nothing AndAlso Not ("GET".Equals(method) OrElse "HEAD".Equals(method)) Then
� � � � � � Using streamWriter = New StreamWriter(request.GetRequestStream(), Encoding.UTF8)
� � � � � � � � streamWriter.Write(body)
� � � � � � � � streamWriter.Close()
� � � � � � End Using
� � � � End If
� � � � read(request, New ResponseReader())
� � End Sub
� � 
� � Private Sub read(ByVal request As HttpWebRequest, ByVal responseReader As ResponseReader)
� � � � Try
� � � � � � Dim response As HttpWebResponse = DirectCast(request.GetResponse(), HttpWebResponse)
� � � � � � responseReader.readHeaders(response)
� � � � � � 
� � � � � � Using response
� � � � � � � � Dim reader = New StreamReader(response.GetResponseStream())
� � � � � � � � responseReader.readContent(reader.ReadToEnd())
� � � � � � � � reader.Close()
� � � � � � End Using
� � � � � � response.Close()
� � � � Catch e As WebException
� � � � � � responseReader.onFailure(e)
� � � � End Try
� � End Sub
� � 
� � Private Interface IResponseReader
� � � � 
� � � � Sub readHeaders(ByVal response As HttpWebResponse)
� � � � 
� � � � Sub readContent(ByVal responseContent As String)
� � � � 
� � � � Sub onFailure(ByVal cause As WebException)
� � End Interface
End Class

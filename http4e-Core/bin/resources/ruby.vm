=begin
 // This is a sample Ruby client featuring Net::HTTP and Rest-client
 // Generated by HTTP4e2 http://www.nextinterfaces.com
=end
# Importing external Ruby Rest-client http://rdoc.info/projects/archiloque/rest-client
require 'rest_client'
require 'net/http'
require 'uri'


def request(method, url, headers, body, params = nil)
  url = URI.parse(url)
  Net::HTTP.start(url.host, url.port) do |http|
    req = nil
    case method.upcase
      when "GET":
        req = Net::HTTP::Get.new(url.path, headers)
      when "POST":
        req = Net::HTTP::Post.new(url.path, headers)
      when "PUT":
        req = Net::HTTP::Put.new(url.path,  headers)
      when "DELETE":
        req = Net::HTTP::Delete.new(url.path, headers)
      when "HEAD":
        req = Net::HTTP::Head.new(url.path, headers)
      when "OPTIONS":
        req = Net::HTTP::Options.new(url.path, headers)
      when "TRACE":
        req = Net::HTTP::Trace.new(url.path, headers)
      else
        raise Exception.new("Invalid HTTP method")
    end
    
    # // req.basic_auth "username", "password"
    
    # // Using req.set_form_data will override your "Content-Type" to "application/x-www-form-urlencoded"
    # // req.set_form_data(params) if not params == nil
    
    # // Use either body params with Content-Type=application/x-www-form-urlencoded or 
    # // req.set_form_data to apply the params directly
    req.body = body
    
    resp = http.request(req)
    
    # // handle the response
    print resp.code + " " + resp.message + " " + resp.body
  end
end


if __FILE__ == $0

  url = '$httpBean.url'
  body = '$httpBean.body'  
  headers = {
#foreach( $hKey in $httpBean.headers.keySet() )
              '$hKey' => '$httpBean.headers.get($hKey)', 
#end
            }
   params = {}
  
  # // Executing Rest-client
  client = RestClient::Resource.new url
  $httpBean.rubyMethod  
  
  # // Executing Net::HTTP
  request("$httpBean.method", url, headers, body, params)
  
end